/* Copyright 2019 The KerasTuner Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/
// Protos for distributed GRPC service

syntax = "proto3";

package kerastuner;

import "kerastuner/protos/kerastuner.proto";

message GetSpaceRequest {}

message GetSpaceResponse {
    kerastuner.HyperParameters hyperparameters = 1;
}

message UpdateSpaceRequest {
    kerastuner.HyperParameters hyperparameters = 1;
}

message UpdateSpaceResponse {}

message CreateTrialRequest {
    string tuner_id = 1;
}

message CreateTrialResponse {
    kerastuner.Trial trial = 1;
}

message UpdateTrialRequest {
    string trial_id = 1;
    map<string, double> metrics = 2;
    int64 step = 3;
}

message UpdateTrialResponse {
    kerastuner.TrialStatus status = 1;
}

message EndTrialRequest {
    string trial_id = 1;
    kerastuner.TrialStatus status = 2;
}

message EndTrialResponse {}

message GetBestTrialsRequest {
    int64 num_trials = 1;
}

message GetBestTrialsResponse {
    repeated kerastuner.Trial trials = 1;
}

message GetTrialRequest {
    string trial_id = 1;
}

message GetTrialResponse {
    kerastuner.Trial trial = 1;
}
    
service Oracle {

    // Return the HyperParameter search space.
    rpc GetSpace(GetSpaceRequest) returns (GetSpaceResponse) {}

    // Updates the HyperParameter search space.
    rpc UpdateSpace(UpdateSpaceRequest) returns (UpdateSpaceResponse) {}

    // Creates a Trial.
    rpc CreateTrial(CreateTrialRequest) returns (CreateTrialResponse) {}

    // Updates a Trial with metrics and a step.
    rpc UpdateTrial(UpdateTrialRequest) returns (UpdateTrialResponse) {}

    // Ends a Trial.
    rpc EndTrial(EndTrialRequest) returns (EndTrialResponse) {}

    // Gets the best Trials.
    rpc GetBestTrials(GetBestTrialsRequest) returns (GetBestTrialsResponse) {}

    // Gets a Trial by ID.
    rpc GetTrial(GetTrialRequest) returns (GetTrialResponse) {}
}
