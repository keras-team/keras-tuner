name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
  release:
    types: [created]
jobs:
  build:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Get pip cache dir
        id: pip-cache
        run: |
          python -m pip install --upgrade pip setuptools
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
      - name: Install dependencies
        run: |
          pip install -e ".[tests]" --progress-bar off --upgrade
      - name: Test with pytest
        run: |
          pytest --cov=keras_tuner --cov-report xml:coverage.xml
      - name: Codecov
        uses: codecov/codecov-action@v3
  compatibility:
    name: Check compatibility with TF 2.0
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Get pip cache dir
        id: pip-cache
        run: |
          python -m pip install --upgrade pip setuptools
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
      - name: Install dependencies
        run: |
          pip install protobuf==3.20.1
          pip install "tensorflow<2.1"
          pip install -e ".[tests]" --progress-bar off --upgrade
      - name: Test with pytest
        run: |
          pytest keras_tuner/integration_tests/legacy_import_test.py
  format:
    name: Check the code format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      # - name: Get pip cache dir
      #   id: pip-cache
      #   run: |
      #     python -m pip install --upgrade pip setuptools
      #     echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      # - name: pip cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ steps.pip-cache.outputs.dir }}
      #     key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
      - name: Install dependencies
        run: |
          pip install -e ".[tests]" --progress-bar off --upgrade
      - name: Lint
        run: bash shell/lint.sh
  deploy:
    needs: [build, format,compatibility]
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
