# -*- coding: utf-8 -*-
import pathlib
import shutil

import keras_autodoc

import kerastuner
from kerastuner.engine.tuner import Tuner
from kerastuner import applications


PAGES = [
    {
        'page': 'documentation/tuners.md',
        'classes': [
            (Tuner, [Tuner.run_trial,
                     Tuner.save_model,
                     Tuner.load_model,
                     Tuner.on_epoch_begin,
                     Tuner.on_batch_begin,
                     Tuner.on_batch_end,
                     Tuner.on_epoch_end,
                     Tuner.get_best_models,
                     Tuner.get_state,
                     Tuner.set_state,
                     Tuner.search]),
            kerastuner.RandomSearch,
            kerastuner.Hyperband,
            kerastuner.BayesianOptimization
        ]
    },
    {
        'page': 'documentation/hypermodels.md',
        'classes': [
            (kerastuner.HyperModel, [kerastuner.HyperModel.build]),
            applications.HyperXception,
            applications.HyperResNet
        ]
    },
    {
        'page': 'documentation/hyperparameters.md',
        'classes': [kerastuner.HyperParameters],
    }
]

kerastuner_dir = pathlib.Path(__file__).resolve().parents[1]


def generate(dest_dir):
    template_dir = kerastuner_dir / 'kerastuner_docs' / 'templates'
    keras_autodoc.generate(
        dest_dir,
        template_dir,
        PAGES,
        'https://github.com/keras-team/keras-tuner/blob/master',
        kerastuner_dir / 'examples',
    )
    readme = (kerastuner_dir / 'README.md').read_text()
    index = (template_dir / 'index.md').read_text()
    index = index.replace('{{autogenerated}}', readme[readme.find('##'):])
    (dest_dir / 'index.md').write_text(index, encoding='utf-8')
    shutil.copyfile(kerastuner_dir / 'CONTRIBUTING.md',
                    dest_dir / 'contributing.md')


if __name__ == '__main__':
    generate(kerastuner_dir / 'kerastuner_docs' / 'sources')
