# Copyright 2019 The KerasTuner Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: keras_tuner/protos/service.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from keras_tuner.protos import (
    keras_tuner_pb2 as keras__tuner_dot_protos_dot_keras__tuner__pb2,
)


DESCRIPTOR = _descriptor.FileDescriptor(
    name="keras_tuner/protos/service.proto",
    package="keras_tuner",
    syntax="proto3",
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
    serialized_pb=b'\n keras_tuner/protos/service.proto\x12\x0bkeras_tuner\x1a$keras_tuner/protos/keras_tuner.proto"\x11\n\x0fGetSpaceRequest"I\n\x10GetSpaceResponse\x12\x35\n\x0fhyperparameters\x18\x01 \x01(\x0b\x32\x1c.keras_tuner.HyperParameters"K\n\x12UpdateSpaceRequest\x12\x35\n\x0fhyperparameters\x18\x01 \x01(\x0b\x32\x1c.keras_tuner.HyperParameters"\x15\n\x13UpdateSpaceResponse"&\n\x12\x43reateTrialRequest\x12\x10\n\x08tuner_id\x18\x01 \x01(\t"8\n\x13\x43reateTrialResponse\x12!\n\x05trial\x18\x01 \x01(\x0b\x32\x12.keras_tuner.Trial"\xa3\x01\n\x12UpdateTrialRequest\x12\x10\n\x08trial_id\x18\x01 \x01(\t\x12=\n\x07metrics\x18\x02 \x03(\x0b\x32,.keras_tuner.UpdateTrialRequest.MetricsEntry\x12\x0c\n\x04step\x18\x03 \x01(\x03\x1a.\n\x0cMetricsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01"?\n\x13UpdateTrialResponse\x12(\n\x06status\x18\x01 \x01(\x0e\x32\x18.keras_tuner.TrialStatus"M\n\x0f\x45ndTrialRequest\x12\x10\n\x08trial_id\x18\x01 \x01(\t\x12(\n\x06status\x18\x02 \x01(\x0e\x32\x18.keras_tuner.TrialStatus"\x12\n\x10\x45ndTrialResponse"*\n\x14GetBestTrialsRequest\x12\x12\n\nnum_trials\x18\x01 \x01(\x03";\n\x15GetBestTrialsResponse\x12"\n\x06trials\x18\x01 \x03(\x0b\x32\x12.keras_tuner.Trial"#\n\x0fGetTrialRequest\x12\x10\n\x08trial_id\x18\x01 \x01(\t"5\n\x10GetTrialResponse\x12!\n\x05trial\x18\x01 \x01(\x0b\x32\x12.keras_tuner.Trial2\xbf\x04\n\x06Oracle\x12I\n\x08GetSpace\x12\x1c.keras_tuner.GetSpaceRequest\x1a\x1d.keras_tuner.GetSpaceResponse"\x00\x12R\n\x0bUpdateSpace\x12\x1f.keras_tuner.UpdateSpaceRequest\x1a .keras_tuner.UpdateSpaceResponse"\x00\x12R\n\x0b\x43reateTrial\x12\x1f.keras_tuner.CreateTrialRequest\x1a .keras_tuner.CreateTrialResponse"\x00\x12R\n\x0bUpdateTrial\x12\x1f.keras_tuner.UpdateTrialRequest\x1a .keras_tuner.UpdateTrialResponse"\x00\x12I\n\x08\x45ndTrial\x12\x1c.keras_tuner.EndTrialRequest\x1a\x1d.keras_tuner.EndTrialResponse"\x00\x12X\n\rGetBestTrials\x12!.keras_tuner.GetBestTrialsRequest\x1a".keras_tuner.GetBestTrialsResponse"\x00\x12I\n\x08GetTrial\x12\x1c.keras_tuner.GetTrialRequest\x1a\x1d.keras_tuner.GetTrialResponse"\x00\x62\x06proto3',
    dependencies=[
        keras__tuner_dot_protos_dot_keras__tuner__pb2.DESCRIPTOR,
    ],
)


_GETSPACEREQUEST = _descriptor.Descriptor(
    name="GetSpaceRequest",
    full_name="keras_tuner.GetSpaceRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=87,
    serialized_end=104,
)


_GETSPACERESPONSE = _descriptor.Descriptor(
    name="GetSpaceResponse",
    full_name="keras_tuner.GetSpaceResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="hyperparameters",
            full_name="keras_tuner.GetSpaceResponse.hyperparameters",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=106,
    serialized_end=179,
)


_UPDATESPACEREQUEST = _descriptor.Descriptor(
    name="UpdateSpaceRequest",
    full_name="keras_tuner.UpdateSpaceRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="hyperparameters",
            full_name="keras_tuner.UpdateSpaceRequest.hyperparameters",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=181,
    serialized_end=256,
)


_UPDATESPACERESPONSE = _descriptor.Descriptor(
    name="UpdateSpaceResponse",
    full_name="keras_tuner.UpdateSpaceResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=258,
    serialized_end=279,
)


_CREATETRIALREQUEST = _descriptor.Descriptor(
    name="CreateTrialRequest",
    full_name="keras_tuner.CreateTrialRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="tuner_id",
            full_name="keras_tuner.CreateTrialRequest.tuner_id",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"".decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=281,
    serialized_end=319,
)


_CREATETRIALRESPONSE = _descriptor.Descriptor(
    name="CreateTrialResponse",
    full_name="keras_tuner.CreateTrialResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="trial",
            full_name="keras_tuner.CreateTrialResponse.trial",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=321,
    serialized_end=377,
)


_UPDATETRIALREQUEST_METRICSENTRY = _descriptor.Descriptor(
    name="MetricsEntry",
    full_name="keras_tuner.UpdateTrialRequest.MetricsEntry",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="key",
            full_name="keras_tuner.UpdateTrialRequest.MetricsEntry.key",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"".decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.FieldDescriptor(
            name="value",
            full_name="keras_tuner.UpdateTrialRequest.MetricsEntry.value",
            index=1,
            number=2,
            type=1,
            cpp_type=5,
            label=1,
            has_default_value=False,
            default_value=float(0),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=b"8\001",
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=497,
    serialized_end=543,
)

_UPDATETRIALREQUEST = _descriptor.Descriptor(
    name="UpdateTrialRequest",
    full_name="keras_tuner.UpdateTrialRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="trial_id",
            full_name="keras_tuner.UpdateTrialRequest.trial_id",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"".decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.FieldDescriptor(
            name="metrics",
            full_name="keras_tuner.UpdateTrialRequest.metrics",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.FieldDescriptor(
            name="step",
            full_name="keras_tuner.UpdateTrialRequest.step",
            index=2,
            number=3,
            type=3,
            cpp_type=2,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[
        _UPDATETRIALREQUEST_METRICSENTRY,
    ],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=380,
    serialized_end=543,
)


_UPDATETRIALRESPONSE = _descriptor.Descriptor(
    name="UpdateTrialResponse",
    full_name="keras_tuner.UpdateTrialResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="status",
            full_name="keras_tuner.UpdateTrialResponse.status",
            index=0,
            number=1,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=545,
    serialized_end=608,
)


_ENDTRIALREQUEST = _descriptor.Descriptor(
    name="EndTrialRequest",
    full_name="keras_tuner.EndTrialRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="trial_id",
            full_name="keras_tuner.EndTrialRequest.trial_id",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"".decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.FieldDescriptor(
            name="status",
            full_name="keras_tuner.EndTrialRequest.status",
            index=1,
            number=2,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=610,
    serialized_end=687,
)


_ENDTRIALRESPONSE = _descriptor.Descriptor(
    name="EndTrialResponse",
    full_name="keras_tuner.EndTrialResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=689,
    serialized_end=707,
)


_GETBESTTRIALSREQUEST = _descriptor.Descriptor(
    name="GetBestTrialsRequest",
    full_name="keras_tuner.GetBestTrialsRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="num_trials",
            full_name="keras_tuner.GetBestTrialsRequest.num_trials",
            index=0,
            number=1,
            type=3,
            cpp_type=2,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=709,
    serialized_end=751,
)


_GETBESTTRIALSRESPONSE = _descriptor.Descriptor(
    name="GetBestTrialsResponse",
    full_name="keras_tuner.GetBestTrialsResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="trials",
            full_name="keras_tuner.GetBestTrialsResponse.trials",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=753,
    serialized_end=812,
)


_GETTRIALREQUEST = _descriptor.Descriptor(
    name="GetTrialRequest",
    full_name="keras_tuner.GetTrialRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="trial_id",
            full_name="keras_tuner.GetTrialRequest.trial_id",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"".decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=814,
    serialized_end=849,
)


_GETTRIALRESPONSE = _descriptor.Descriptor(
    name="GetTrialResponse",
    full_name="keras_tuner.GetTrialResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="trial",
            full_name="keras_tuner.GetTrialResponse.trial",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=851,
    serialized_end=904,
)

_GETSPACERESPONSE.fields_by_name[
    "hyperparameters"
].message_type = keras__tuner_dot_protos_dot_keras__tuner__pb2._HYPERPARAMETERS
_UPDATESPACEREQUEST.fields_by_name[
    "hyperparameters"
].message_type = keras__tuner_dot_protos_dot_keras__tuner__pb2._HYPERPARAMETERS
_CREATETRIALRESPONSE.fields_by_name[
    "trial"
].message_type = keras__tuner_dot_protos_dot_keras__tuner__pb2._TRIAL
_UPDATETRIALREQUEST_METRICSENTRY.containing_type = _UPDATETRIALREQUEST
_UPDATETRIALREQUEST.fields_by_name[
    "metrics"
].message_type = _UPDATETRIALREQUEST_METRICSENTRY
_UPDATETRIALRESPONSE.fields_by_name[
    "status"
].enum_type = keras__tuner_dot_protos_dot_keras__tuner__pb2._TRIALSTATUS
_ENDTRIALREQUEST.fields_by_name[
    "status"
].enum_type = keras__tuner_dot_protos_dot_keras__tuner__pb2._TRIALSTATUS
_GETBESTTRIALSRESPONSE.fields_by_name[
    "trials"
].message_type = keras__tuner_dot_protos_dot_keras__tuner__pb2._TRIAL
_GETTRIALRESPONSE.fields_by_name[
    "trial"
].message_type = keras__tuner_dot_protos_dot_keras__tuner__pb2._TRIAL
DESCRIPTOR.message_types_by_name["GetSpaceRequest"] = _GETSPACEREQUEST
DESCRIPTOR.message_types_by_name["GetSpaceResponse"] = _GETSPACERESPONSE
DESCRIPTOR.message_types_by_name["UpdateSpaceRequest"] = _UPDATESPACEREQUEST
DESCRIPTOR.message_types_by_name["UpdateSpaceResponse"] = _UPDATESPACERESPONSE
DESCRIPTOR.message_types_by_name["CreateTrialRequest"] = _CREATETRIALREQUEST
DESCRIPTOR.message_types_by_name["CreateTrialResponse"] = _CREATETRIALRESPONSE
DESCRIPTOR.message_types_by_name["UpdateTrialRequest"] = _UPDATETRIALREQUEST
DESCRIPTOR.message_types_by_name["UpdateTrialResponse"] = _UPDATETRIALRESPONSE
DESCRIPTOR.message_types_by_name["EndTrialRequest"] = _ENDTRIALREQUEST
DESCRIPTOR.message_types_by_name["EndTrialResponse"] = _ENDTRIALRESPONSE
DESCRIPTOR.message_types_by_name["GetBestTrialsRequest"] = _GETBESTTRIALSREQUEST
DESCRIPTOR.message_types_by_name["GetBestTrialsResponse"] = _GETBESTTRIALSRESPONSE
DESCRIPTOR.message_types_by_name["GetTrialRequest"] = _GETTRIALREQUEST
DESCRIPTOR.message_types_by_name["GetTrialResponse"] = _GETTRIALRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetSpaceRequest = _reflection.GeneratedProtocolMessageType(
    "GetSpaceRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _GETSPACEREQUEST,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.GetSpaceRequest)
    },
)
_sym_db.RegisterMessage(GetSpaceRequest)

GetSpaceResponse = _reflection.GeneratedProtocolMessageType(
    "GetSpaceResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _GETSPACERESPONSE,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.GetSpaceResponse)
    },
)
_sym_db.RegisterMessage(GetSpaceResponse)

UpdateSpaceRequest = _reflection.GeneratedProtocolMessageType(
    "UpdateSpaceRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _UPDATESPACEREQUEST,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.UpdateSpaceRequest)
    },
)
_sym_db.RegisterMessage(UpdateSpaceRequest)

UpdateSpaceResponse = _reflection.GeneratedProtocolMessageType(
    "UpdateSpaceResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _UPDATESPACERESPONSE,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.UpdateSpaceResponse)
    },
)
_sym_db.RegisterMessage(UpdateSpaceResponse)

CreateTrialRequest = _reflection.GeneratedProtocolMessageType(
    "CreateTrialRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _CREATETRIALREQUEST,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.CreateTrialRequest)
    },
)
_sym_db.RegisterMessage(CreateTrialRequest)

CreateTrialResponse = _reflection.GeneratedProtocolMessageType(
    "CreateTrialResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _CREATETRIALRESPONSE,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.CreateTrialResponse)
    },
)
_sym_db.RegisterMessage(CreateTrialResponse)

UpdateTrialRequest = _reflection.GeneratedProtocolMessageType(
    "UpdateTrialRequest",
    (_message.Message,),
    {
        "MetricsEntry": _reflection.GeneratedProtocolMessageType(
            "MetricsEntry",
            (_message.Message,),
            {
                "DESCRIPTOR": _UPDATETRIALREQUEST_METRICSENTRY,
                "__module__": "keras_tuner.protos.service_pb2"
                # @@protoc_insertion_point(class_scope:keras_tuner.UpdateTrialRequest.MetricsEntry)
            },
        ),
        "DESCRIPTOR": _UPDATETRIALREQUEST,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.UpdateTrialRequest)
    },
)
_sym_db.RegisterMessage(UpdateTrialRequest)
_sym_db.RegisterMessage(UpdateTrialRequest.MetricsEntry)

UpdateTrialResponse = _reflection.GeneratedProtocolMessageType(
    "UpdateTrialResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _UPDATETRIALRESPONSE,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.UpdateTrialResponse)
    },
)
_sym_db.RegisterMessage(UpdateTrialResponse)

EndTrialRequest = _reflection.GeneratedProtocolMessageType(
    "EndTrialRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _ENDTRIALREQUEST,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.EndTrialRequest)
    },
)
_sym_db.RegisterMessage(EndTrialRequest)

EndTrialResponse = _reflection.GeneratedProtocolMessageType(
    "EndTrialResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _ENDTRIALRESPONSE,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.EndTrialResponse)
    },
)
_sym_db.RegisterMessage(EndTrialResponse)

GetBestTrialsRequest = _reflection.GeneratedProtocolMessageType(
    "GetBestTrialsRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _GETBESTTRIALSREQUEST,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.GetBestTrialsRequest)
    },
)
_sym_db.RegisterMessage(GetBestTrialsRequest)

GetBestTrialsResponse = _reflection.GeneratedProtocolMessageType(
    "GetBestTrialsResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _GETBESTTRIALSRESPONSE,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.GetBestTrialsResponse)
    },
)
_sym_db.RegisterMessage(GetBestTrialsResponse)

GetTrialRequest = _reflection.GeneratedProtocolMessageType(
    "GetTrialRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _GETTRIALREQUEST,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.GetTrialRequest)
    },
)
_sym_db.RegisterMessage(GetTrialRequest)

GetTrialResponse = _reflection.GeneratedProtocolMessageType(
    "GetTrialResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _GETTRIALRESPONSE,
        "__module__": "keras_tuner.protos.service_pb2"
        # @@protoc_insertion_point(class_scope:keras_tuner.GetTrialResponse)
    },
)
_sym_db.RegisterMessage(GetTrialResponse)


_UPDATETRIALREQUEST_METRICSENTRY._options = None

_ORACLE = _descriptor.ServiceDescriptor(
    name="Oracle",
    full_name="keras_tuner.Oracle",
    file=DESCRIPTOR,
    index=0,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
    serialized_start=907,
    serialized_end=1482,
    methods=[
        _descriptor.MethodDescriptor(
            name="GetSpace",
            full_name="keras_tuner.Oracle.GetSpace",
            index=0,
            containing_service=None,
            input_type=_GETSPACEREQUEST,
            output_type=_GETSPACERESPONSE,
            serialized_options=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.MethodDescriptor(
            name="UpdateSpace",
            full_name="keras_tuner.Oracle.UpdateSpace",
            index=1,
            containing_service=None,
            input_type=_UPDATESPACEREQUEST,
            output_type=_UPDATESPACERESPONSE,
            serialized_options=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.MethodDescriptor(
            name="CreateTrial",
            full_name="keras_tuner.Oracle.CreateTrial",
            index=2,
            containing_service=None,
            input_type=_CREATETRIALREQUEST,
            output_type=_CREATETRIALRESPONSE,
            serialized_options=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.MethodDescriptor(
            name="UpdateTrial",
            full_name="keras_tuner.Oracle.UpdateTrial",
            index=3,
            containing_service=None,
            input_type=_UPDATETRIALREQUEST,
            output_type=_UPDATETRIALRESPONSE,
            serialized_options=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.MethodDescriptor(
            name="EndTrial",
            full_name="keras_tuner.Oracle.EndTrial",
            index=4,
            containing_service=None,
            input_type=_ENDTRIALREQUEST,
            output_type=_ENDTRIALRESPONSE,
            serialized_options=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.MethodDescriptor(
            name="GetBestTrials",
            full_name="keras_tuner.Oracle.GetBestTrials",
            index=5,
            containing_service=None,
            input_type=_GETBESTTRIALSREQUEST,
            output_type=_GETBESTTRIALSRESPONSE,
            serialized_options=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.MethodDescriptor(
            name="GetTrial",
            full_name="keras_tuner.Oracle.GetTrial",
            index=6,
            containing_service=None,
            input_type=_GETTRIALREQUEST,
            output_type=_GETTRIALRESPONSE,
            serialized_options=None,
            create_key=_descriptor._internal_create_key,
        ),
    ],
)
_sym_db.RegisterServiceDescriptor(_ORACLE)

DESCRIPTOR.services_by_name["Oracle"] = _ORACLE

# @@protoc_insertion_point(module_scope)
